/*
 * NFT Storage API
 *
 * # API Reference 
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nftstorage

import (
	"encoding/json"
)

// Deal struct for Deal
type Deal struct {
	BatchRootCid *string `json:"batchRootCid,omitempty"`
	// This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: YYYY-MM-DDTHH:MM:SSZ.
	LastChange string `json:"lastChange"`
	// Miner ID
	Miner *string `json:"miner,omitempty"`
	// Filecoin network for this Deal
	Network *string `json:"network,omitempty"`
	// Piece CID string
	PieceCid *string `json:"pieceCid,omitempty"`
	// Deal Status
	Status string `json:"status"`
	// Deal Status Description
	StatusText *string `json:"statusText,omitempty"`
	// This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: YYYY-MM-DDTHH:MM:SSZ.
	DealActivation *string `json:"dealActivation,omitempty"`
	// This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: YYYY-MM-DDTHH:MM:SSZ.
	DealExpiration *string `json:"dealExpiration,omitempty"`
}

// NewDeal instantiates a new Deal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeal(lastChange string, status string) *Deal {
	this := Deal{}
	this.LastChange = lastChange
	this.Status = status
	return &this
}

// NewDealWithDefaults instantiates a new Deal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDealWithDefaults() *Deal {
	this := Deal{}
	return &this
}

// GetBatchRootCid returns the BatchRootCid field value if set, zero value otherwise.
func (o *Deal) GetBatchRootCid() string {
	if o == nil || o.BatchRootCid == nil {
		var ret string
		return ret
	}
	return *o.BatchRootCid
}

// GetBatchRootCidOk returns a tuple with the BatchRootCid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deal) GetBatchRootCidOk() (*string, bool) {
	if o == nil || o.BatchRootCid == nil {
		return nil, false
	}
	return o.BatchRootCid, true
}

// HasBatchRootCid returns a boolean if a field has been set.
func (o *Deal) HasBatchRootCid() bool {
	if o != nil && o.BatchRootCid != nil {
		return true
	}

	return false
}

// SetBatchRootCid gets a reference to the given string and assigns it to the BatchRootCid field.
func (o *Deal) SetBatchRootCid(v string) {
	o.BatchRootCid = &v
}

// GetLastChange returns the LastChange field value
func (o *Deal) GetLastChange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastChange
}

// GetLastChangeOk returns a tuple with the LastChange field value
// and a boolean to check if the value has been set.
func (o *Deal) GetLastChangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastChange, true
}

// SetLastChange sets field value
func (o *Deal) SetLastChange(v string) {
	o.LastChange = v
}

// GetMiner returns the Miner field value if set, zero value otherwise.
func (o *Deal) GetMiner() string {
	if o == nil || o.Miner == nil {
		var ret string
		return ret
	}
	return *o.Miner
}

// GetMinerOk returns a tuple with the Miner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deal) GetMinerOk() (*string, bool) {
	if o == nil || o.Miner == nil {
		return nil, false
	}
	return o.Miner, true
}

// HasMiner returns a boolean if a field has been set.
func (o *Deal) HasMiner() bool {
	if o != nil && o.Miner != nil {
		return true
	}

	return false
}

// SetMiner gets a reference to the given string and assigns it to the Miner field.
func (o *Deal) SetMiner(v string) {
	o.Miner = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *Deal) GetNetwork() string {
	if o == nil || o.Network == nil {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deal) GetNetworkOk() (*string, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *Deal) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *Deal) SetNetwork(v string) {
	o.Network = &v
}

// GetPieceCid returns the PieceCid field value if set, zero value otherwise.
func (o *Deal) GetPieceCid() string {
	if o == nil || o.PieceCid == nil {
		var ret string
		return ret
	}
	return *o.PieceCid
}

// GetPieceCidOk returns a tuple with the PieceCid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deal) GetPieceCidOk() (*string, bool) {
	if o == nil || o.PieceCid == nil {
		return nil, false
	}
	return o.PieceCid, true
}

// HasPieceCid returns a boolean if a field has been set.
func (o *Deal) HasPieceCid() bool {
	if o != nil && o.PieceCid != nil {
		return true
	}

	return false
}

// SetPieceCid gets a reference to the given string and assigns it to the PieceCid field.
func (o *Deal) SetPieceCid(v string) {
	o.PieceCid = &v
}

// GetStatus returns the Status field value
func (o *Deal) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Deal) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Deal) SetStatus(v string) {
	o.Status = v
}

// GetStatusText returns the StatusText field value if set, zero value otherwise.
func (o *Deal) GetStatusText() string {
	if o == nil || o.StatusText == nil {
		var ret string
		return ret
	}
	return *o.StatusText
}

// GetStatusTextOk returns a tuple with the StatusText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deal) GetStatusTextOk() (*string, bool) {
	if o == nil || o.StatusText == nil {
		return nil, false
	}
	return o.StatusText, true
}

// HasStatusText returns a boolean if a field has been set.
func (o *Deal) HasStatusText() bool {
	if o != nil && o.StatusText != nil {
		return true
	}

	return false
}

// SetStatusText gets a reference to the given string and assigns it to the StatusText field.
func (o *Deal) SetStatusText(v string) {
	o.StatusText = &v
}

// GetDealActivation returns the DealActivation field value if set, zero value otherwise.
func (o *Deal) GetDealActivation() string {
	if o == nil || o.DealActivation == nil {
		var ret string
		return ret
	}
	return *o.DealActivation
}

// GetDealActivationOk returns a tuple with the DealActivation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deal) GetDealActivationOk() (*string, bool) {
	if o == nil || o.DealActivation == nil {
		return nil, false
	}
	return o.DealActivation, true
}

// HasDealActivation returns a boolean if a field has been set.
func (o *Deal) HasDealActivation() bool {
	if o != nil && o.DealActivation != nil {
		return true
	}

	return false
}

// SetDealActivation gets a reference to the given string and assigns it to the DealActivation field.
func (o *Deal) SetDealActivation(v string) {
	o.DealActivation = &v
}

// GetDealExpiration returns the DealExpiration field value if set, zero value otherwise.
func (o *Deal) GetDealExpiration() string {
	if o == nil || o.DealExpiration == nil {
		var ret string
		return ret
	}
	return *o.DealExpiration
}

// GetDealExpirationOk returns a tuple with the DealExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deal) GetDealExpirationOk() (*string, bool) {
	if o == nil || o.DealExpiration == nil {
		return nil, false
	}
	return o.DealExpiration, true
}

// HasDealExpiration returns a boolean if a field has been set.
func (o *Deal) HasDealExpiration() bool {
	if o != nil && o.DealExpiration != nil {
		return true
	}

	return false
}

// SetDealExpiration gets a reference to the given string and assigns it to the DealExpiration field.
func (o *Deal) SetDealExpiration(v string) {
	o.DealExpiration = &v
}

func (o Deal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BatchRootCid != nil {
		toSerialize["batchRootCid"] = o.BatchRootCid
	}
	if true {
		toSerialize["lastChange"] = o.LastChange
	}
	if o.Miner != nil {
		toSerialize["miner"] = o.Miner
	}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	if o.PieceCid != nil {
		toSerialize["pieceCid"] = o.PieceCid
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.StatusText != nil {
		toSerialize["statusText"] = o.StatusText
	}
	if o.DealActivation != nil {
		toSerialize["dealActivation"] = o.DealActivation
	}
	if o.DealExpiration != nil {
		toSerialize["dealExpiration"] = o.DealExpiration
	}
	return json.Marshal(toSerialize)
}

type NullableDeal struct {
	value *Deal
	isSet bool
}

func (v NullableDeal) Get() *Deal {
	return v.value
}

func (v *NullableDeal) Set(val *Deal) {
	v.value = val
	v.isSet = true
}

func (v NullableDeal) IsSet() bool {
	return v.isSet
}

func (v *NullableDeal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeal(val *Deal) *NullableDeal {
	return &NullableDeal{value: val, isSet: true}
}

func (v NullableDeal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


